
---

## üìÑ 3Ô∏è‚É£ `openapi.yaml`  

This is a **Swagger/OpenAPI 3.1** specification scaffold for your REST API.  
It defines your key paths, reusable schemas, and auth flow ‚Äî ready for tools like Swagger UI or Postman import.

```yaml
openapi: 3.1.0
info:
  title: Project Athlete 360 API
  version: 1.0.0
  description: REST API documentation for Project Athlete 360 athlete management backend.
  contact:
    name: Project Athlete 360 Team
    url: https://projectathlete360.com
servers:
  - url: http://localhost:5000
    description: Local development

tags:
  - name: Auth
    description: Authentication endpoints
  - name: Users
  - name: Athletes
  - name: Sessions
  - name: Assessments
  - name: Performance
  - name: Attendance
  - name: Injuries
  - name: TrainingSessions

paths:
  /auth/login:
    post:
      tags: [Auth]
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'

  /users:
    get:
      tags: [Users]
      summary: Get all users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns all users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required: [username, password]

    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        user:
          $ref: '#/components/schemas/User'

    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [admin, coach, athlete]

    UserListResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
